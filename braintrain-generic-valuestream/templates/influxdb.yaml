{{- $projects := .Values.projects }}
{{- range $project := $projects }}
{{- range $namespace := $project.namespaces }}
{{- if $namespace.influxDb }}
{{- if $namespace.influxDb.deploy }}
---
# Source: vs-backend/charts/influxdb/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ $namespace.name }}
  name: influxdb2
  labels:
    app.kubernetes.io/name: influxdb2
    helm.sh/chart: influxdb2-1.1.0
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/version: "2.0.4"
    app.kubernetes.io/managed-by: Helm
---
# Source: vs-backend/charts/influxdb/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ $namespace.name }}
  name: influxdb-influxdb
  labels:
    app.kubernetes.io/name: influxdb2
    helm.sh/chart: influxdb2-1.1.0
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/version: "2.0.4"
    app.kubernetes.io/managed-by: Helm
data:
  influxdb.conf: |+
    reporting-disabled = false
    bind-address = ":8088"

    [meta]
      dir = "/var/lib/influxdb/meta"

    [data]
      dir = "/var/lib/influxdb/data"
      wal-dir = "/var/lib/influxdb/wal"

    [coordinator]

    [retention]

    [shard-precreation]

    [monitor]

    [subscriber]

    [http]

    # TODO: allow multiple graphite listeners

    [[graphite]]

    # TODO: allow multiple collectd listeners with templates

    [[collectd]]

    # TODO: allow multiple opentsdb listeners with templates

    [[opentsdb]]

    # TODO: allow multiple udp listeners with templates

    [[udp]]

    [continuous_queries]

    [logging]
---
# Source: test/charts/influxdb2/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: {{ $namespace.name }}
  name: influxdb2
  labels:
    app.kubernetes.io/name: influxdb2
    helm.sh/chart: influxdb2-1.1.0
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/version: "2.0.4"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8086
  selector:
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/instance: influxdb2
---
# Source: test/charts/influxdb2/templates/persistent-volume-claim.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ $namespace.name }}-influxdb2
  labels:
    app.kubernetes.io/name: influxdb2
    helm.sh/chart: influxdb2-1.1.0
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/version: "2.0.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/resource-policy: "keep"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: test/charts/influxdb2/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: {{ $namespace.name }}
  name: influxdb2
  labels:
    app.kubernetes.io/name: influxdb2
    helm.sh/chart: influxdb2-1.1.0
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "2.0.4"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: influxdb2
      app.kubernetes.io/instance: influxdb2
  serviceName: "influxdb2"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb2
        app.kubernetes.io/instance: RELEASE-NAME
      annotations:
        {}
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: influxdb2
      containers:
        - name: influxdb2
          image: "quay.io/influxdb/influxdb:v2.0.4"
          imagePullPolicy: IfNotPresent
          args:
            - influxd
            - --engine-path
            - /root/.influxdbv2
          ports:
            - name: http
              containerPort: 8086
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          volumeMounts:
          - name: data
            mountPath: /root/.influxdbv2
          resources:
            {}
---          
# Source: test/charts/influxdb2/templates/job-setup-admin.yaml
apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{ $namespace.name }}
  labels:
    app.kubernetes.io/name: influxdb2
    helm.sh/chart: influxdb2-1.1.0
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/version: "2.0.4"
    app.kubernetes.io/managed-by: Helm
  name: influxdb2-create-admin-user
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
spec:
  activeDeadlineSeconds: 90
  template:
    metadata:
      labels:
        app.kubernetes.io/name: influxdb2
        helm.sh/chart: influxdb2-1.1.0
        app.kubernetes.io/instance: influxdb2
        app.kubernetes.io/version: "2.0.4"
        app.kubernetes.io/managed-by: Helm
      annotations:
        {}
    spec:
      containers:
      - name: influxdb2-create-admin-user
        image: "quay.io/influxdb/influxdb:v2.0.4"
        env:
          - name: INFLUXDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: influxdb2-auth
                key: admin-password
          - name: INFLUXDB_TOKEN
            valueFrom:
              secretKeyRef:
                name: influxdb2-auth
                key: admin-token
        command:
          - bash
        args:
          - -c
          - |
            influx setup -f \
            --host http://influxdb2:80 \
            -o influxdata \
            -b default \
            -u admin \
            -r 0s \
            -p ${INFLUXDB_PASSWORD} \
            -t ${INFLUXDB_TOKEN}
      restartPolicy: OnFailure
{{- end }}
{{- end }}
{{- end }}
{{- end }}